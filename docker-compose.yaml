services:
  db:
    image: ankane/pgvector:v0.5.1
    container_name: db
    restart: always
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chatbot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      [
        "redis-server",
        "--appendonly",
        "yes",
        "--maxmemory",
        "500mb",
        "--maxmemory-policy",
        "allkeys-lru",
      ]

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs
    restart: always
    ports:
      - "${NEXTJS_PORT:-3000}:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/chatbot
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  redis_data:
